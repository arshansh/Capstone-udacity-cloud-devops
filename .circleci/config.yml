# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
jobs:
  build-lint-CI:
    docker:
      # Use the same Docker base as the project
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
    
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&            chmod +x /bin/hadolint
      - save_cache:
           paths:
             - ./venv
           key: v1-dependencies-{{ checksum "requirements.txt" }}
    
          # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint 

  build-push-docker-image:
    docker:
      # Use the same Docker base as the project
      - image: circleci/golang:1.15
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          command: |
              echo $DOCKER_PWD | docker login -u $DOCKER_USER --password-stdin
              TAG=0.1.$CIRCLE_BUILD_NUM
              docker build -t $DOCKER_USER/my_machine_learning_app:$TAG .
              docker images      
              docker push $DOCKER_USER/my_machine_learning_app:$TAG
  
  set_up_kubernetes_infra:
    docker:
      - image: amazon/aws-cli:2.1.24
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          command: |
            yum install -y tar gzip
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            mv /tmp/eksctl /usr/local/bin
      - run:
          command: |
            CLUSTER_EXIST=$(eksctl get cluster --name my-kubernetes-cluster)

workflows:
  default:
    jobs:
      - set_up_kubernetes_infra        